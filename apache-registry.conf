<VirtualHost *:80>
  ServerName registry.example.com
  ServerSignature Off

  RewriteEngine on
  RewriteCond %{HTTPS} !=on
  RewriteRule .* https://%{SERVER_NAME}%{REQUEST_URI} [NE,R,L]
</VirtualHost>

<VirtualHost *:443>
  ServerName registry.example.com:443
  
  ErrorLog logs/registry_ssl_error_log
  TransferLog logs/registry_ssl_access_log
  LogLevel debug
  
  SSLEngine on
  SSLHonorCipherOrder on
  SSLCipherSuite PROFILE=SYSTEM
  SSLProxyCipherSuite PROFILE=SYSTEM
  SSLCertificateFile /etc/pki/tls/certs/registry.example.com.pem
  SSLCertificateKeyFile /etc/pki/tls/private/registry.example.com-key.pem
  #SSLCertificateChainFile /etc/pki/tls/certs/server-chain.crt
  #SSLCACertificateFile /etc/pki/tls/certs/ca-bundle.crt
  SSLCompression off
  
  Header always set "Docker-Distribution-Api-Version" "registry/2.0"
  Header onsuccess set "Docker-Distribution-Api-Version" "registry/2.0"
  RequestHeader set X-Forwarded-Proto "https"
  
  ProxyRequests     off
  ProxyPreserveHost on
  
  # no proxy for /error/ (Apache HTTPd errors messages)
  ProxyPass /error/ !
  
  ProxyPass /v2 http://127.0.0.1:5000/v2 timeout=900
  ProxyPassReverse /v2 http://127.0.0.1:5000/v2
  
  <Location /v2>
    Order deny,allow
    Allow from all

    AuthType basic
    AuthName "Registry Authentication"
    AuthBasicProvider ldap

    AuthLDAPGroupAttribute member
    AuthLDAPSubGroupClass group
    AuthLDAPGroupAttributeIsDN On
    AuthLDAPURL ldaps://dc1.example.com/DC=example,DC=com?sAMAccountName?sub?(objectClass=*)
    AuthLDAPBindDN ldaphttpd@example.com
    AuthLDAPBindPassword secret

    # Read access to authentified users
    <Limit GET HEAD>
      Require valid-user
    </Limit>

    # Write access to docker-deployer only
    <Limit POST PUT DELETE PATCH>
      Require ldap-group CN=w_registry,CN=Users,DC=example,DC=com
    </Limit>

  </Location>

</VirtualHost>

